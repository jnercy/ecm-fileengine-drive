
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springbootVersion}")
        classpath("org.jooq:jooq-codegen:3.9.1")
        classpath("mysql:mysql-connector-java:5.1.22")
    }
}


apply plugin: 'org.springframework.boot'

jar {
    baseName = 'ecm-fileengine-drive'
    version =  '0.0.1'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:$springbootVersion")
    compile("org.springframework.boot:spring-boot-starter-jooq:$springbootVersion")

    compile project(":drive-api")
    compile("mysql:mysql-connector-java:5.1.22")
    compile("com.github.tobato:fastdfs-client:1.25.2-RELEASE")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springbootVersion}")
}



//def writer = new StringWriter()
//def xml = new groovy.xml.MarkupBuilder(writer)
//        .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.9.0.xsd') {
//    jdbc() {
//        driver('com.mysql.jdbc.Driver')
//        url('jdbc:mysql://139.196.142.178:3306/ecm_trans')
//        user('root')
//        password('nextC0nT')
//    }
//    generator() {
//        database() {
//        }
//
//        // Watch out for this caveat when using MarkupBuilder with "reserved names"
//        // - https://github.com/jOOQ/jOOQ/issues/4797
//        // - http://stackoverflow.com/a/11389034/521799
//        // - https://groups.google.com/forum/#!topic/jooq-user/wi4S9rRxk4A
//        generate([:]) {
//            pojos true
//            daos true
//        }
//        target() {
//            packageName('com.nextcont.drive.jooq.db')
//            directory('src/main/java')
//        }
//    }
//}
//
//// Run the code generator
//// ----------------------
//org.jooq.util.GenerationTool.generate(
//        javax.xml.bind.JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
//)