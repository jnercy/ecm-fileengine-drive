/*
 * This file is generated by jOOQ.
*/
package com.nextcont.drive.jooq.db.mysql.tables.daos;


import com.nextcont.drive.jooq.db.mysql.enums.FuncType;
import com.nextcont.drive.jooq.db.mysql.tables.Func;
import com.nextcont.drive.jooq.db.mysql.tables.records.FuncRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * User defined functions
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FuncDao extends DAOImpl<FuncRecord, com.nextcont.drive.jooq.db.mysql.tables.pojos.Func, String> {

    /**
     * Create a new FuncDao without any configuration
     */
    public FuncDao() {
        super(Func.FUNC, com.nextcont.drive.jooq.db.mysql.tables.pojos.Func.class);
    }

    /**
     * Create a new FuncDao with an attached configuration
     */
    public FuncDao(Configuration configuration) {
        super(Func.FUNC, com.nextcont.drive.jooq.db.mysql.tables.pojos.Func.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.nextcont.drive.jooq.db.mysql.tables.pojos.Func object) {
        return object.getName();
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Func> fetchByName(String... values) {
        return fetch(Func.FUNC.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.nextcont.drive.jooq.db.mysql.tables.pojos.Func fetchOneByName(String value) {
        return fetchOne(Func.FUNC.NAME, value);
    }

    /**
     * Fetch records that have <code>ret IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Func> fetchByRet(Byte... values) {
        return fetch(Func.FUNC.RET, values);
    }

    /**
     * Fetch records that have <code>dl IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Func> fetchByDl(String... values) {
        return fetch(Func.FUNC.DL, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Func> fetchByType(FuncType... values) {
        return fetch(Func.FUNC.TYPE, values);
    }
}
