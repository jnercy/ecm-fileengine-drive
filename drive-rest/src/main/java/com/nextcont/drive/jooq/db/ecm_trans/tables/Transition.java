/*
 * This file is generated by jOOQ.
*/
package com.nextcont.drive.jooq.db.ecm_trans.tables;


import com.nextcont.drive.jooq.db.ecm_trans.EcmTrans;
import com.nextcont.drive.jooq.db.ecm_trans.Keys;
import com.nextcont.drive.jooq.db.ecm_trans.tables.records.TransitionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transition extends TableImpl<TransitionRecord> {

    private static final long serialVersionUID = 1264140965;

    /**
     * The reference instance of <code>ecm_trans.transition</code>
     */
    public static final Transition TRANSITION = new Transition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransitionRecord> getRecordType() {
        return TransitionRecord.class;
    }

    /**
     * The column <code>ecm_trans.transition.globalId</code>. 请求id
     */
    public final TableField<TransitionRecord, String> GLOBALID = createField("globalId", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "请求id");

    /**
     * The column <code>ecm_trans.transition.createdate</code>. 创建时间
     */
    public final TableField<TransitionRecord, Timestamp> CREATEDATE = createField("createdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>ecm_trans.transition.requesttype</code>. 请求类型:HTTP|WEBSOCKET
     */
    public final TableField<TransitionRecord, String> REQUESTTYPE = createField("requesttype", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "请求类型:HTTP|WEBSOCKET");

    /**
     * The column <code>ecm_trans.transition.clientid</code>. caller client id
     */
    public final TableField<TransitionRecord, String> CLIENTID = createField("clientid", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "caller client id");

    /**
     * The column <code>ecm_trans.transition.filename</code>. 文件名称
     */
    public final TableField<TransitionRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.VARCHAR.length(300), this, "文件名称");

    /**
     * The column <code>ecm_trans.transition.fileid</code>.
     */
    public final TableField<TransitionRecord, String> FILEID = createField("fileid", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>ecm_trans.transition.length</code>. 文件长度
     */
    public final TableField<TransitionRecord, Long> LENGTH = createField("length", org.jooq.impl.SQLDataType.BIGINT, this, "文件长度");

    /**
     * The column <code>ecm_trans.transition.mimetype</code>. 文件mime-type
     */
    public final TableField<TransitionRecord, String> MIMETYPE = createField("mimetype", org.jooq.impl.SQLDataType.VARCHAR.length(150), this, "文件mime-type");

    /**
     * The column <code>ecm_trans.transition.source</code>. 文件来源:HTTP URL|FTP|FILE UPLOAD|CHUNCKED FILE UPLOAD
     */
    public final TableField<TransitionRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "文件来源:HTTP URL|FTP|FILE UPLOAD|CHUNCKED FILE UPLOAD");

    /**
     * The column <code>ecm_trans.transition.callbackurl</code>. 回调URL
     */
    public final TableField<TransitionRecord, String> CALLBACKURL = createField("callbackurl", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "回调URL");

    /**
     * The column <code>ecm_trans.transition.md5digest</code>. 文件的md5摘要
     */
    public final TableField<TransitionRecord, String> MD5DIGEST = createField("md5digest", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "文件的md5摘要");

    /**
     * The column <code>ecm_trans.transition.fileextension</code>.
     */
    public final TableField<TransitionRecord, String> FILEEXTENSION = createField("fileextension", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>ecm_trans.transition.alijobid</code>. 阿里转码jobid
     */
    public final TableField<TransitionRecord, String> ALIJOBID = createField("alijobid", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "阿里转码jobid");

    /**
     * The column <code>ecm_trans.transition.filesize</code>.
     */
    public final TableField<TransitionRecord, Integer> FILESIZE = createField("filesize", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>ecm_trans.transition.callbacktype</code>.
     */
    public final TableField<TransitionRecord, String> CALLBACKTYPE = createField("callbacktype", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>ecm_trans.transition.websocketsessionid</code>.
     */
    public final TableField<TransitionRecord, String> WEBSOCKETSESSIONID = createField("websocketsessionid", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>ecm_trans.transition.errormsg</code>.
     */
    public final TableField<TransitionRecord, String> ERRORMSG = createField("errormsg", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>ecm_trans.transition.location</code>.
     */
    public final TableField<TransitionRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

    /**
     * Create a <code>ecm_trans.transition</code> table reference
     */
    public Transition() {
        this("transition", null);
    }

    /**
     * Create an aliased <code>ecm_trans.transition</code> table reference
     */
    public Transition(String alias) {
        this(alias, TRANSITION);
    }

    private Transition(String alias, Table<TransitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Transition(String alias, Table<TransitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return EcmTrans.ECM_TRANS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TransitionRecord> getPrimaryKey() {
        return Keys.KEY_TRANSITION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TransitionRecord>> getKeys() {
        return Arrays.<UniqueKey<TransitionRecord>>asList(Keys.KEY_TRANSITION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Transition as(String alias) {
        return new Transition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Transition rename(String name) {
        return new Transition(name, null);
    }
}
