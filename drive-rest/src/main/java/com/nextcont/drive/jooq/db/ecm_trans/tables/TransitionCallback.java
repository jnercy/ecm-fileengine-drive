/*
 * This file is generated by jOOQ.
*/
package com.nextcont.drive.jooq.db.ecm_trans.tables;


import com.nextcont.drive.jooq.db.ecm_trans.EcmTrans;
import com.nextcont.drive.jooq.db.ecm_trans.tables.records.TransitionCallbackRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransitionCallback extends TableImpl<TransitionCallbackRecord> {

    private static final long serialVersionUID = -1749297230;

    /**
     * The reference instance of <code>ecm_trans.transition_callback</code>
     */
    public static final TransitionCallback TRANSITION_CALLBACK = new TransitionCallback();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransitionCallbackRecord> getRecordType() {
        return TransitionCallbackRecord.class;
    }

    /**
     * The column <code>ecm_trans.transition_callback.globalId</code>.
     */
    public final TableField<TransitionCallbackRecord, String> GLOBALID = createField("globalId", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>ecm_trans.transition_callback.fileId</code>.
     */
    public final TableField<TransitionCallbackRecord, String> FILEID = createField("fileId", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>ecm_trans.transition_callback.status</code>.
     */
    public final TableField<TransitionCallbackRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

    /**
     * The column <code>ecm_trans.transition_callback.info</code>.
     */
    public final TableField<TransitionCallbackRecord, String> INFO = createField("info", org.jooq.impl.SQLDataType.VARCHAR.length(1000).nullable(false), this, "");

    /**
     * The column <code>ecm_trans.transition_callback.callbackUrl</code>.
     */
    public final TableField<TransitionCallbackRecord, String> CALLBACKURL = createField("callbackUrl", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>ecm_trans.transition_callback.createTime</code>.
     */
    public final TableField<TransitionCallbackRecord, Timestamp> CREATETIME = createField("createTime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ecm_trans.transition_callback.aggregationStatus</code>. 聚合状态
     */
    public final TableField<TransitionCallbackRecord, Byte> AGGREGATIONSTATUS = createField("aggregationStatus", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "聚合状态");

    /**
     * The column <code>ecm_trans.transition_callback.iconLink</code>. 文件图标链接
     */
    public final TableField<TransitionCallbackRecord, String> ICONLINK = createField("iconLink", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "文件图标链接");

    /**
     * Create a <code>ecm_trans.transition_callback</code> table reference
     */
    public TransitionCallback() {
        this("transition_callback", null);
    }

    /**
     * Create an aliased <code>ecm_trans.transition_callback</code> table reference
     */
    public TransitionCallback(String alias) {
        this(alias, TRANSITION_CALLBACK);
    }

    private TransitionCallback(String alias, Table<TransitionCallbackRecord> aliased) {
        this(alias, aliased, null);
    }

    private TransitionCallback(String alias, Table<TransitionCallbackRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return EcmTrans.ECM_TRANS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransitionCallback as(String alias) {
        return new TransitionCallback(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TransitionCallback rename(String name) {
        return new TransitionCallback(name, null);
    }
}
