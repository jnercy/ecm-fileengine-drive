/*
 * This file is generated by jOOQ.
*/
package com.nextcont.drive.jooq.db.mysql.tables.pojos;


import com.nextcont.drive.jooq.db.mysql.enums.EventIntervalField;
import com.nextcont.drive.jooq.db.mysql.enums.EventOnCompletion;
import com.nextcont.drive.jooq.db.mysql.enums.EventStatus;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.UInteger;


/**
 * Events
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Event implements Serializable {

    private static final long serialVersionUID = -1733237671;

    private String             db;
    private String             name;
    private byte[]             body;
    private String             definer;
    private Timestamp          executeAt;
    private Integer            intervalValue;
    private EventIntervalField intervalField;
    private Timestamp          created;
    private Timestamp          modified;
    private Timestamp          lastExecuted;
    private Timestamp          starts;
    private Timestamp          ends;
    private EventStatus        status;
    private EventOnCompletion  onCompletion;
    private String             sqlMode;
    private String             comment;
    private UInteger           originator;
    private String             timeZone;
    private String             characterSetClient;
    private String             collationConnection;
    private String             dbCollation;
    private byte[]             bodyUtf8;

    public Event() {}

    public Event(Event value) {
        this.db = value.db;
        this.name = value.name;
        this.body = value.body;
        this.definer = value.definer;
        this.executeAt = value.executeAt;
        this.intervalValue = value.intervalValue;
        this.intervalField = value.intervalField;
        this.created = value.created;
        this.modified = value.modified;
        this.lastExecuted = value.lastExecuted;
        this.starts = value.starts;
        this.ends = value.ends;
        this.status = value.status;
        this.onCompletion = value.onCompletion;
        this.sqlMode = value.sqlMode;
        this.comment = value.comment;
        this.originator = value.originator;
        this.timeZone = value.timeZone;
        this.characterSetClient = value.characterSetClient;
        this.collationConnection = value.collationConnection;
        this.dbCollation = value.dbCollation;
        this.bodyUtf8 = value.bodyUtf8;
    }

    public Event(
        String             db,
        String             name,
        byte[]             body,
        String             definer,
        Timestamp          executeAt,
        Integer            intervalValue,
        EventIntervalField intervalField,
        Timestamp          created,
        Timestamp          modified,
        Timestamp          lastExecuted,
        Timestamp          starts,
        Timestamp          ends,
        EventStatus        status,
        EventOnCompletion  onCompletion,
        String             sqlMode,
        String             comment,
        UInteger           originator,
        String             timeZone,
        String             characterSetClient,
        String             collationConnection,
        String             dbCollation,
        byte[]             bodyUtf8
    ) {
        this.db = db;
        this.name = name;
        this.body = body;
        this.definer = definer;
        this.executeAt = executeAt;
        this.intervalValue = intervalValue;
        this.intervalField = intervalField;
        this.created = created;
        this.modified = modified;
        this.lastExecuted = lastExecuted;
        this.starts = starts;
        this.ends = ends;
        this.status = status;
        this.onCompletion = onCompletion;
        this.sqlMode = sqlMode;
        this.comment = comment;
        this.originator = originator;
        this.timeZone = timeZone;
        this.characterSetClient = characterSetClient;
        this.collationConnection = collationConnection;
        this.dbCollation = dbCollation;
        this.bodyUtf8 = bodyUtf8;
    }

    public String getDb() {
        return this.db;
    }

    public void setDb(String db) {
        this.db = db;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public byte[] getBody() {
        return this.body;
    }

    public void setBody(byte... body) {
        this.body = body;
    }

    public String getDefiner() {
        return this.definer;
    }

    public void setDefiner(String definer) {
        this.definer = definer;
    }

    public Timestamp getExecuteAt() {
        return this.executeAt;
    }

    public void setExecuteAt(Timestamp executeAt) {
        this.executeAt = executeAt;
    }

    public Integer getIntervalValue() {
        return this.intervalValue;
    }

    public void setIntervalValue(Integer intervalValue) {
        this.intervalValue = intervalValue;
    }

    public EventIntervalField getIntervalField() {
        return this.intervalField;
    }

    public void setIntervalField(EventIntervalField intervalField) {
        this.intervalField = intervalField;
    }

    public Timestamp getCreated() {
        return this.created;
    }

    public void setCreated(Timestamp created) {
        this.created = created;
    }

    public Timestamp getModified() {
        return this.modified;
    }

    public void setModified(Timestamp modified) {
        this.modified = modified;
    }

    public Timestamp getLastExecuted() {
        return this.lastExecuted;
    }

    public void setLastExecuted(Timestamp lastExecuted) {
        this.lastExecuted = lastExecuted;
    }

    public Timestamp getStarts() {
        return this.starts;
    }

    public void setStarts(Timestamp starts) {
        this.starts = starts;
    }

    public Timestamp getEnds() {
        return this.ends;
    }

    public void setEnds(Timestamp ends) {
        this.ends = ends;
    }

    public EventStatus getStatus() {
        return this.status;
    }

    public void setStatus(EventStatus status) {
        this.status = status;
    }

    public EventOnCompletion getOnCompletion() {
        return this.onCompletion;
    }

    public void setOnCompletion(EventOnCompletion onCompletion) {
        this.onCompletion = onCompletion;
    }

    public String getSqlMode() {
        return this.sqlMode;
    }

    public void setSqlMode(String sqlMode) {
        this.sqlMode = sqlMode;
    }

    public String getComment() {
        return this.comment;
    }

    public void setComment(String comment) {
        this.comment = comment;
    }

    public UInteger getOriginator() {
        return this.originator;
    }

    public void setOriginator(UInteger originator) {
        this.originator = originator;
    }

    public String getTimeZone() {
        return this.timeZone;
    }

    public void setTimeZone(String timeZone) {
        this.timeZone = timeZone;
    }

    public String getCharacterSetClient() {
        return this.characterSetClient;
    }

    public void setCharacterSetClient(String characterSetClient) {
        this.characterSetClient = characterSetClient;
    }

    public String getCollationConnection() {
        return this.collationConnection;
    }

    public void setCollationConnection(String collationConnection) {
        this.collationConnection = collationConnection;
    }

    public String getDbCollation() {
        return this.dbCollation;
    }

    public void setDbCollation(String dbCollation) {
        this.dbCollation = dbCollation;
    }

    public byte[] getBodyUtf8() {
        return this.bodyUtf8;
    }

    public void setBodyUtf8(byte... bodyUtf8) {
        this.bodyUtf8 = bodyUtf8;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Event (");

        sb.append(db);
        sb.append(", ").append(name);
        sb.append(", ").append("[binary...]");
        sb.append(", ").append(definer);
        sb.append(", ").append(executeAt);
        sb.append(", ").append(intervalValue);
        sb.append(", ").append(intervalField);
        sb.append(", ").append(created);
        sb.append(", ").append(modified);
        sb.append(", ").append(lastExecuted);
        sb.append(", ").append(starts);
        sb.append(", ").append(ends);
        sb.append(", ").append(status);
        sb.append(", ").append(onCompletion);
        sb.append(", ").append(sqlMode);
        sb.append(", ").append(comment);
        sb.append(", ").append(originator);
        sb.append(", ").append(timeZone);
        sb.append(", ").append(characterSetClient);
        sb.append(", ").append(collationConnection);
        sb.append(", ").append(dbCollation);
        sb.append(", ").append("[binary...]");

        sb.append(")");
        return sb.toString();
    }
}
