/*
 * This file is generated by jOOQ.
*/
package com.nextcont.drive.jooq.db.mysql.tables.daos;


import com.nextcont.drive.jooq.db.mysql.tables.Servers;
import com.nextcont.drive.jooq.db.mysql.tables.records.ServersRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * MySQL Foreign Servers table
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServersDao extends DAOImpl<ServersRecord, com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers, String> {

    /**
     * Create a new ServersDao without any configuration
     */
    public ServersDao() {
        super(Servers.SERVERS, com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers.class);
    }

    /**
     * Create a new ServersDao with an attached configuration
     */
    public ServersDao(Configuration configuration) {
        super(Servers.SERVERS, com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers object) {
        return object.getServerName();
    }

    /**
     * Fetch records that have <code>Server_name IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchByServerName(String... values) {
        return fetch(Servers.SERVERS.SERVER_NAME, values);
    }

    /**
     * Fetch a unique record that has <code>Server_name = value</code>
     */
    public com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers fetchOneByServerName(String value) {
        return fetchOne(Servers.SERVERS.SERVER_NAME, value);
    }

    /**
     * Fetch records that have <code>Host IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchByHost(String... values) {
        return fetch(Servers.SERVERS.HOST, values);
    }

    /**
     * Fetch records that have <code>Db IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchByDb(String... values) {
        return fetch(Servers.SERVERS.DB, values);
    }

    /**
     * Fetch records that have <code>Username IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchByUsername(String... values) {
        return fetch(Servers.SERVERS.USERNAME, values);
    }

    /**
     * Fetch records that have <code>Password IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchByPassword(String... values) {
        return fetch(Servers.SERVERS.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>Port IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchByPort(Integer... values) {
        return fetch(Servers.SERVERS.PORT, values);
    }

    /**
     * Fetch records that have <code>Socket IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchBySocket(String... values) {
        return fetch(Servers.SERVERS.SOCKET, values);
    }

    /**
     * Fetch records that have <code>Wrapper IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchByWrapper(String... values) {
        return fetch(Servers.SERVERS.WRAPPER, values);
    }

    /**
     * Fetch records that have <code>Owner IN (values)</code>
     */
    public List<com.nextcont.drive.jooq.db.mysql.tables.pojos.Servers> fetchByOwner(String... values) {
        return fetch(Servers.SERVERS.OWNER, values);
    }
}
