/*
 * This file is generated by jOOQ.
*/
package com.nextcont.drive.jooq.db.mysql.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.UInteger;


/**
 * General log
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GeneralLog implements Serializable {

    private static final long serialVersionUID = 946023824;

    private Timestamp eventTime;
    private String    userHost;
    private Integer   threadId;
    private UInteger  serverId;
    private String    commandType;
    private String    argument;

    public GeneralLog() {}

    public GeneralLog(GeneralLog value) {
        this.eventTime = value.eventTime;
        this.userHost = value.userHost;
        this.threadId = value.threadId;
        this.serverId = value.serverId;
        this.commandType = value.commandType;
        this.argument = value.argument;
    }

    public GeneralLog(
        Timestamp eventTime,
        String    userHost,
        Integer   threadId,
        UInteger  serverId,
        String    commandType,
        String    argument
    ) {
        this.eventTime = eventTime;
        this.userHost = userHost;
        this.threadId = threadId;
        this.serverId = serverId;
        this.commandType = commandType;
        this.argument = argument;
    }

    public Timestamp getEventTime() {
        return this.eventTime;
    }

    public void setEventTime(Timestamp eventTime) {
        this.eventTime = eventTime;
    }

    public String getUserHost() {
        return this.userHost;
    }

    public void setUserHost(String userHost) {
        this.userHost = userHost;
    }

    public Integer getThreadId() {
        return this.threadId;
    }

    public void setThreadId(Integer threadId) {
        this.threadId = threadId;
    }

    public UInteger getServerId() {
        return this.serverId;
    }

    public void setServerId(UInteger serverId) {
        this.serverId = serverId;
    }

    public String getCommandType() {
        return this.commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    public String getArgument() {
        return this.argument;
    }

    public void setArgument(String argument) {
        this.argument = argument;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GeneralLog (");

        sb.append(eventTime);
        sb.append(", ").append(userHost);
        sb.append(", ").append(threadId);
        sb.append(", ").append(serverId);
        sb.append(", ").append(commandType);
        sb.append(", ").append(argument);

        sb.append(")");
        return sb.toString();
    }
}
