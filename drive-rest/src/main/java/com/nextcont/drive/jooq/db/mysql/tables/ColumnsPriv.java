/*
 * This file is generated by jOOQ.
*/
package com.nextcont.drive.jooq.db.mysql.tables;


import com.nextcont.drive.jooq.db.mysql.Keys;
import com.nextcont.drive.jooq.db.mysql.Mysql;
import com.nextcont.drive.jooq.db.mysql.tables.records.ColumnsPrivRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Column privileges
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ColumnsPriv extends TableImpl<ColumnsPrivRecord> {

    private static final long serialVersionUID = 36237727;

    /**
     * The reference instance of <code>mysql.columns_priv</code>
     */
    public static final ColumnsPriv COLUMNS_PRIV = new ColumnsPriv();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ColumnsPrivRecord> getRecordType() {
        return ColumnsPrivRecord.class;
    }

    /**
     * The column <code>mysql.columns_priv.Host</code>.
     */
    public final TableField<ColumnsPrivRecord, String> HOST = createField("Host", org.jooq.impl.SQLDataType.CHAR.length(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.columns_priv.Db</code>.
     */
    public final TableField<ColumnsPrivRecord, String> DB = createField("Db", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.columns_priv.User</code>.
     */
    public final TableField<ColumnsPrivRecord, String> USER = createField("User", org.jooq.impl.SQLDataType.CHAR.length(16).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.columns_priv.Table_name</code>.
     */
    public final TableField<ColumnsPrivRecord, String> TABLE_NAME = createField("Table_name", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.columns_priv.Column_name</code>.
     */
    public final TableField<ColumnsPrivRecord, String> COLUMN_NAME = createField("Column_name", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>mysql.columns_priv.Timestamp</code>.
     */
    public final TableField<ColumnsPrivRecord, Timestamp> TIMESTAMP = createField("Timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>mysql.columns_priv.Column_priv</code>.
     */
    public final TableField<ColumnsPrivRecord, String> COLUMN_PRIV = createField("Column_priv", org.jooq.impl.SQLDataType.VARCHAR.length(31).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>mysql.columns_priv</code> table reference
     */
    public ColumnsPriv() {
        this("columns_priv", null);
    }

    /**
     * Create an aliased <code>mysql.columns_priv</code> table reference
     */
    public ColumnsPriv(String alias) {
        this(alias, COLUMNS_PRIV);
    }

    private ColumnsPriv(String alias, Table<ColumnsPrivRecord> aliased) {
        this(alias, aliased, null);
    }

    private ColumnsPriv(String alias, Table<ColumnsPrivRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Column privileges");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ColumnsPrivRecord> getPrimaryKey() {
        return Keys.KEY_COLUMNS_PRIV_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ColumnsPrivRecord>> getKeys() {
        return Arrays.<UniqueKey<ColumnsPrivRecord>>asList(Keys.KEY_COLUMNS_PRIV_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ColumnsPriv as(String alias) {
        return new ColumnsPriv(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ColumnsPriv rename(String name) {
        return new ColumnsPriv(name, null);
    }
}
